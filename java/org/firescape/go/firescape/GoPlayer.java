// Java class org.firescape.go.firescape.GoPlayer is a proxy for talking to a Go program.
//   gobind -lang=java -javapkg=org.firescape.go firescape
//
// File is generated by gobind. Do not edit.
package org.firescape.go.firescape;

import go.Seq;

public final class GoPlayer implements Seq.Proxy {
    static { Firescape.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    GoPlayer(Seq.Ref ref) { this.ref = ref; }
    
    public GoPlayer() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    public final native String getUsername();
    public final native void setUsername(String v);
    
    public native String getUsername();
    public native void sayHello();
    public native void setUsername(String s);
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof GoPlayer)) {
            return false;
        }
        GoPlayer that = (GoPlayer)o;
        String thisUsername = getUsername();
        String thatUsername = that.getUsername();
        if (thisUsername == null) {
            if (thatUsername != null) {
                return false;
            }
        } else if (!thisUsername.equals(thatUsername)) {
            return false;
        }
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getUsername()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("GoPlayer").append("{");
        b.append("Username:").append(getUsername()).append(",");
        return b.append("}").toString();
    }
}

